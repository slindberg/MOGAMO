addpath('./test_functions/');

% Mapping of test function names to structs that describe corresponding
% optimization parameters
test_function_map = containers.Map(...
    {'schaffer', 'fonsecafleming', 'kursawe'}, ...
    { ...
        struct( ...
            'n', 1, ...
            'fn', @schaffer, ...
            'lb', -10, ...
            'ub', 10 ...
        ), ...
        struct( ...
            'n', 3, ...
            'fn', @fonsecafleming, ...
            'lb', [-4,-4,-4], ...
            'ub', [4,4,4] ...
        ), ...
        struct( ...
            'n', 3, ...
            'fn', @kursawe, ...
            'lb', [-5,-5,-5], ...
            'ub', [5,5,5] ...
        ) ...
    } ...
);

% Create a mapping of test function name to function calling gamultiobj()
% with the appropriate parameters
gamultiobj_test_map = containers.Map();
for key = keys(test_function_map)
    test_obj = test_function_map(key{1});
    gamultiobj_fn = @(options) gamultiobj(test_obj.fn, test_obj.n, [], [], [], [], test_obj.lb, test_obj.ub, options);
    gamultiobj_test_map(key{1}) = gamultiobj_fn;
end
clear key test_obj gamultiobj_fn;